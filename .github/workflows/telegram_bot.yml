name: Telegram Bot CI

on:
  push:
    paths:
      - "telegram_bot/**"
      - ".github/workflows/telegram_bot.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      BACKEND_URL: ${{ secrets.BACKEND_URL }}
      API_KEY: ${{ secrets.API_KEY }}
      API_VERSION: ${{ secrets.API_VERSION }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    defaults:
      run:
        working-directory: telegram_bot

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-asyncio python-dotenv

      - name: Run tests
        run: |
          python -m pytest -s -vv

      # Docker build and push only if tests pass

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: telegram_bot

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URI }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ secrets.AWS_ECR_URI }}
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ github.sha }} .

      - name: Push Docker image to ECR
        run: |
          IMAGE_NAME=${{ secrets.AWS_ECR_URI }}
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}
